{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/MemeTextScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar MemeTextScreen = function MemeTextScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var keyWord = 'Saloni';\n\n  function validateName(nme) {\n    if (nme == keyWord) {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 20\n        }\n      }, \"Saloni is a bad baby!\");\n    } else if (name != keyWord && name != \"\") {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 20\n        }\n      }, name, \" is a amazing!\");\n    }\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Enter your name: \"), React.createElement(TextInput, {\n    style: styles.input,\n    autoCorrect: false,\n    value: name,\n    onChangeText: function onChangeText(newText) {\n      return setName(newText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), validateName(name));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    margin: 15,\n    borderColor: 'black',\n    borderWidth: 1\n  }\n});\nexport default MemeTextScreen;","map":{"version":3,"sources":["/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/MemeTextScreen.js"],"names":["React","useState","MemeTextScreen","name","setName","keyWord","validateName","nme","styles","input","newText","StyleSheet","create","margin","borderColor","borderWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAEzB,kBAAwBD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,OAAO,GAAG,QAAhB;;AAEA,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,QAAIA,GAAG,IAAIF,OAAX,EAAoB;AAChB,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACH,KAFD,MAGK,IAAKF,IAAI,IAAIE,OAAT,IAAsBF,IAAI,IAAI,EAAlC,EAAuC;AACxC,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAP,mBAAP;AACH;AACJ;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADG,EAEH,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEK,MAAM,CAACC,KADlB;AAEI,IAAA,WAAW,EAAE,KAFjB;AAGI,IAAA,KAAK,EAAEN,IAHX;AAII,IAAA,YAAY,EAAE,sBAACO,OAAD;AAAA,aAAaN,OAAO,CAACM,OAAD,CAApB;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EASFJ,YAAY,CAACH,IAAD,CATV,CAAP;AAYH,CA1BD;;AA8BA,IAAMK,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,KAAK,EAAE;AACHI,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,WAAW,EAAE,OAFV;AAGHC,IAAAA,WAAW,EAAE;AAHV;AADsB,CAAlB,CAAf;AAQA,eAAeb,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport { Text, View, StyleSheet, TextInput } from 'react-native';\n\nconst MemeTextScreen = () => {\n\n    const [name, setName] = useState(\"\");\n    const keyWord = 'Saloni'\n\n    function validateName(nme) {\n        if (nme == keyWord) {\n            return <Text>Saloni is a bad baby!</Text>\n        }\n        else if ((name != keyWord) && (name != \"\")) {\n            return <Text>{name} is a amazing!</Text>\n        }\n    }\n\n    return <View>\n        <Text>Enter your name: </Text>\n        <TextInput \n            style={styles.input}\n            autoCorrect={false}\n            value={name}\n            onChangeText={(newText) => setName(newText)}\n        >    \n        </TextInput>\n        {validateName(name)}\n    </View>\n\n};\n\n// TextInput is basically invisible by default, so it always needs styling\n\nconst styles = StyleSheet.create({\n    input: {\n        margin: 15,\n        borderColor: 'black',\n        borderWidth: 1\n    }\n});\n\nexport default MemeTextScreen;"]},"metadata":{},"sourceType":"module"}