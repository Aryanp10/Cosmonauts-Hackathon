{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/OptionalRgbScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport OptionalRgbComponent from \"../components/OptionalRgbComponent\";\nvar COLOR_INCREMENT = 20;\n\nvar reducer = function reducer(state, action) {\n  switch (action.colorToChange) {\n    case 'red':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.amount\n      });\n\n    case 'green':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.amount\n      });\n\n    case 'blue':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.amount\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar OptionalRgbScreen = function OptionalRgbScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, React.createElement(OptionalRgbComponent, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'red',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'red',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    increment: COLOR_INCREMENT,\n    colorName: \"red\",\n    colorVariable: red,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), React.createElement(OptionalRgbComponent, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'green',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'green',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    increment: COLOR_INCREMENT,\n    colorName: \"green\",\n    colorVariable: green,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(OptionalRgbComponent, {\n    onIncrease: function onIncrease() {\n      return dispatch({\n        colorToChange: 'blue',\n        amount: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        colorToChange: 'blue',\n        amount: -1 * COLOR_INCREMENT\n      });\n    },\n    increment: COLOR_INCREMENT,\n    colorName: \"blue\",\n    colorVariable: blue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \", \" + green + \", \" + blue + \")\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({});\nexport default OptionalRgbScreen;","map":{"version":3,"sources":["/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/OptionalRgbScreen.js"],"names":["React","useReducer","OptionalRgbComponent","COLOR_INCREMENT","reducer","state","action","colorToChange","red","amount","green","blue","OptionalRgbScreen","dispatch","height","width","backgroundColor","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["// This is another way to accomplish what is done in RgbScreen.js but with a different method\r\n// Use the OptionalRgbComponent with this\r\n\r\nimport React, {useReducer} from 'react';\r\nimport {View, StyleSheet} from 'react-native';\r\nimport OptionalRgbComponent from '../components/OptionalRgbComponent';\r\n\r\nconst COLOR_INCREMENT = 20;\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.colorToChange) {\r\n        case 'red':\r\n            return { ...state, red: state.red + action.amount };\r\n        case 'green':\r\n            return { ...state, green: state.green + action.amount };\r\n        case 'blue':\r\n            return { ...state, blue: state.blue + action.amount };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst OptionalRgbScreen = () => {\r\n    const [state, dispatch] = useReducer(reducer, {red: 0, green: 0, blue: 0});\r\n    const { red, green, blue } = state;\r\n\r\n    return <View>\r\n        <OptionalRgbComponent  onIncrease={ () => dispatch({ colorToChange: 'red', amount: COLOR_INCREMENT})} onDecrease={ () => dispatch({ colorToChange: 'red', amount: -1 * COLOR_INCREMENT})} increment={COLOR_INCREMENT} colorName='red' colorVariable={red} ></OptionalRgbComponent>\r\n        <OptionalRgbComponent  onIncrease={ () => dispatch({ colorToChange: 'green', amount: COLOR_INCREMENT})}  onDecrease={ () => dispatch({ colorToChange: 'green', amount: -1 * COLOR_INCREMENT})} increment={COLOR_INCREMENT} colorName='green' colorVariable={green} ></OptionalRgbComponent>\r\n        <OptionalRgbComponent  onIncrease={ () => dispatch({ colorToChange: 'blue', amount: COLOR_INCREMENT})}  onDecrease={ () => dispatch({ colorToChange: 'blue', amount: -1 * COLOR_INCREMENT})} increment={COLOR_INCREMENT} colorName='blue'colorVariable={blue} ></OptionalRgbComponent>\r\n        <View style={ {height: 150, width: 150, backgroundColor: `rgb(${red}, ${green}, ${blue})`} }></View>\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default OptionalRgbScreen;"]},"metadata":{},"sourceType":"module"}