{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/TextScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar TextScreen = function TextScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var numOfCharacters = 5;\n\n  function validatePassword(passwd) {\n    if (passwd.length < numOfCharacters) {\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }, \"Password mush be longer than \", numOfCharacters, \" characters\");\n    }\n  }\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Enter Password: \"), React.createElement(TextInput, {\n    style: styles.input,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    value: password,\n    onChangeText: function onChangeText(changedText) {\n      return setPassword(changedText);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), validatePassword(password));\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    margin: 15,\n    borderColor: 'black',\n    borderWidth: 1\n  }\n});\nexport default TextScreen;","map":{"version":3,"sources":["/home/theonlyonzz/Projects/CodeRed/Idea_2/Cosmonauts-Hackathon/src/screens/TextScreen.js"],"names":["React","useState","TextScreen","password","setPassword","numOfCharacters","validatePassword","passwd","length","styles","input","changedText","StyleSheet","create","margin","borderColor","borderWidth"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAkBrB,kBAAgCD,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOE,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,eAAe,GAAG,CAAxB;;AAEA,WAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,QAAIA,MAAM,CAACC,MAAP,GAAgBH,eAApB,EAAqC;AACjC,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAoCA,eAApC,gBAAP;AACH;AACJ;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADG,EAEH,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEI,MAAM,CAACC,KADlB;AAEI,IAAA,cAAc,EAAC,MAFnB;AAGI,IAAA,WAAW,EAAE,KAHjB;AAII,IAAA,KAAK,EAAEP,QAJX;AAKI,IAAA,YAAY,EAAE,sBAACQ,WAAD;AAAA,aAAiBP,WAAW,CAACO,WAAD,CAA5B;AAAA,KALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAUFL,gBAAgB,CAACH,QAAD,CAVd,CAAP;AAaH,CAxCD;;AA4CA,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,KAAK,EAAE;AACHI,IAAAA,MAAM,EAAE,EADL;AAEHC,IAAAA,WAAW,EAAE,OAFV;AAGHC,IAAAA,WAAW,EAAE;AAHV;AADsB,CAAlB,CAAf;AAQA,eAAed,UAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Text, View, StyleSheet, TextInput } from 'react-native';\r\n\r\nconst TextScreen = () => {\r\n\r\n// Display interactive name\r\n//    const [name, setName] = useState(\"\");\r\n//\r\n//    return <View>\r\n//        <Text>Enter Name:</Text>\r\n//        <TextInput \r\n//            style={styles.input}\r\n//            autoCapitalize='none'\r\n//            autoCorrect={false}\r\n//            value={name}\r\n//            onChangeText={(newValue) => setName(newValue)}\r\n//        />\r\n//        <Text>My name is {name}</Text>\r\n//    </View>\r\n\r\n    // Validate password longer than x characters\r\n    const [password, setPassword] = useState(\"\");\r\n    const numOfCharacters = 5;\r\n\r\n    function validatePassword(passwd) {\r\n        if (passwd.length < numOfCharacters) {\r\n            return <Text>Password mush be longer than {numOfCharacters} characters</Text>\r\n        }\r\n    }\r\n\r\n    return <View>\r\n        <Text>Enter Password: </Text>\r\n        <TextInput \r\n            style={styles.input}\r\n            autoCapitalize='none'\r\n            autoCorrect={false}\r\n            value={password}\r\n            onChangeText={(changedText) => setPassword(changedText)}\r\n        >    \r\n        </TextInput>\r\n        {validatePassword(password)}\r\n    </View>\r\n\r\n};\r\n\r\n// TextInput is basically invisible by default, so it always needs styling\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        margin: 15,\r\n        borderColor: 'black',\r\n        borderWidth: 1\r\n    }\r\n});\r\n\r\nexport default TextScreen;"]},"metadata":{},"sourceType":"module"}